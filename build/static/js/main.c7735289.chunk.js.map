{"version":3,"sources":["components/SingleCard.js","App.js","index.js"],"names":["SingleCard","card","handleChoice","flipped","disabled","className","src","alt","onClick","cardImages","matched","App","useState","cards","setCards","turns","setTurns","setDisabled","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","shuffleCards","shuffledCards","sort","Math","random","map","id","useEffect","prevCards","resetTurn","setTimeout","console","log","prevTurns","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQA8BeA,MA3Bf,YAA8D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,SAQ9C,OACI,qBAAKC,UAAU,OAAf,SACI,sBAAKA,UAAWF,EAAU,UAAY,GAAtC,UACI,qBACIE,UAAU,QACVC,IAAKL,EAAKK,IACVC,IAAI,eAER,qBACIF,UAAU,OACVC,IAAI,iBACJC,IAAI,YACJC,QAlBI,WACXJ,GACDF,EAAaD,YCAnBQ,EAAa,CACf,CAAC,IAAO,oBAAqBC,SAAS,GACtC,CAAC,IAAO,oBAAqBA,SAAS,GACtC,CAAC,IAAO,kBAAmBA,SAAS,GACpC,CAAC,IAAO,oBAAqBA,SAAS,GACtC,CAAC,IAAO,oBAAqBA,SAAS,GACtC,CAAC,IAAO,mBAAoBA,SAAS,IAoF1BC,MAjFf,WACI,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCJ,oBAAS,GAAzC,mBAAOR,EAAP,KAAiBa,EAAjB,KAEA,EAAkCL,mBAAS,MAA3C,mBAAOM,EAAP,KAAkBC,EAAlB,KACA,EAAkCP,mBAAS,MAA3C,mBAAOQ,EAAP,KAAkBC,EAAlB,KAGMC,EAAe,WACjB,IAAMC,EAAgB,UAAId,EAAeA,GACpCe,MAAK,kBAAMC,KAAKC,SAAW,MAC3BC,KAAI,SAAC1B,GAAD,mBAAC,eAAcA,GAAf,IAAqB2B,GAAIH,KAAKC,cACvCP,EAAa,MACbE,EAAa,MACbP,EAASS,GACTP,EAAS,IAIPd,EAAe,SAACD,GAClBiB,EAAYG,EAAapB,GAAQkB,EAAalB,IAIlD4B,qBAAU,WAEFX,GAAaE,IACbH,GAAY,GACRC,EAAUZ,MAAQc,EAAUd,KAC5BQ,GAAS,SAAAgB,GACL,OAAOA,EAAUH,KAAI,SAAA1B,GACjB,OAAIA,EAAKK,MAAQY,EAAUZ,IAChB,2BAAIL,GAAX,IAAiBS,SAAS,IAEnBT,QAInB8B,KAEAC,YAAW,kBAAMD,MAAa,QAGvC,CAACb,EAAWE,IAEfa,QAAQC,IAAIrB,GAEZ,IAAMkB,EAAY,WACdZ,EAAa,MACbE,EAAa,MACbL,GAAS,SAAAmB,GAAS,OAAIA,EAAY,KAClClB,GAAY,IAQhB,OAJAY,qBAAU,WACNP,MACD,IAGC,sBAAKjB,UAAU,MAAf,UACI,6CACA,wBAAQG,QAASc,EAAjB,sBAEA,qBAAKjB,UAAU,YAAf,SACKQ,EAAMc,KAAI,SAAA1B,GAAI,OACX,cAAC,EAAD,CACIA,KAAMA,EAENC,aAAcA,EACdC,QAASF,IAASiB,GAAajB,IAASmB,GAAanB,EAAKS,QAC1DN,SAAUA,GAHLH,EAAK2B,SAOtB,wCAAWb,SCvFvBqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c7735289.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./SingleCard.css\"\r\n\r\nfunction SingleCard({card, handleChoice, flipped, disabled}) {\r\n\r\n    const handleClick = () => {\r\n        if (!disabled) {\r\n            handleChoice(card)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className={flipped ? \"flipped\" : \"\"}>\r\n                <img\r\n                    className=\"front\"\r\n                    src={card.src}\r\n                    alt=\"card front\"\r\n                />\r\n                <img\r\n                    className=\"back\"\r\n                    src=\"/img/cover.png\"\r\n                    alt=\"card back\"\r\n                    onClick={handleClick}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SingleCard","import './App.css'\nimport {useState, useEffect} from \"react\";\n\n//components\nimport SingleCard from \"./components/SingleCard\";\n\n\nconst cardImages = [\n    {\"src\": \"/img/helmet-1.png\", matched: false},\n    {\"src\": \"/img/potion-1.png\", matched: false},\n    {\"src\": \"/img/ring-1.png\", matched: false},\n    {\"src\": \"/img/scroll-1.png\", matched: false},\n    {\"src\": \"/img/shield-1.png\", matched: false},\n    {\"src\": \"/img/sword-1.png\", matched: false},\n]\n\nfunction App() {\n    const [cards, setCards] = useState([])\n    const [turns, setTurns] = useState(0)\n    const [disabled, setDisabled] = useState(false)\n\n    const [choiceOne, setChoiceOne] = useState(null)\n    const [choiceTwo, setChoiceTwo] = useState(null)\n\n    // shuffle card\n    const shuffleCards = () => {\n        const shuffledCards = [...cardImages, ...cardImages]\n            .sort(() => Math.random() - 0.5)\n            .map((card) => ({...card, id: Math.random()}))\n        setChoiceOne(null)\n        setChoiceTwo(null)\n        setCards(shuffledCards)\n        setTurns(0)\n    }\n\n    // handle a choice\n    const handleChoice = (card) => {\n        choiceOne ? setChoiceTwo(card) : setChoiceOne(card)\n    }\n\n    // compare 2 selected cards\n    useEffect(() => {\n\n        if (choiceOne && choiceTwo) {\n            setDisabled(true)\n            if (choiceOne.src === choiceTwo.src) {\n                setCards(prevCards => {\n                    return prevCards.map(card => {\n                        if (card.src === choiceOne.src) {\n                            return {...card, matched: true}\n                        } else {\n                            return card\n                        }\n                    })\n                })\n                resetTurn()\n            } else {\n                setTimeout(() => resetTurn(), 1000)\n            }\n        }\n    }, [choiceOne, choiceTwo])\n\n    console.log(cards)\n\n    const resetTurn = () => {\n        setChoiceOne(null)\n        setChoiceTwo(null)\n        setTurns(prevTurns => prevTurns + 1)\n        setDisabled(false)\n    }\n\n    // start new game automatically\n    useEffect(() => {\n        shuffleCards()\n    }, [])\n\n    return (\n        <div className=\"App\">\n            <h1>Magic Match</h1>\n            <button onClick={shuffleCards}>New Game</button>\n\n            <div className=\"card-grid\">\n                {cards.map(card => (\n                    <SingleCard\n                        card={card}\n                        key={card.id}\n                        handleChoice={handleChoice}\n                        flipped={card === choiceOne || card === choiceTwo || card.matched}\n                        disabled={disabled}\n                    />\n                ))}\n            </div>\n            <p>Turns: {turns}</p>\n        </div>\n    );\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}